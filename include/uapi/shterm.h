/* include/uapi/shterm.h
 *
 * Copyright (C) 2017 Sharp Corporation
 *
 * This software is licensed under the terms of the GNU General Public
 * License version 2, as published by the Free Software Foundation, and
 * may be copied, distributed, and modified under those terms.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 */

#ifndef _SHTERM_H_
#define _SHTERM_H_

/*==============================================================================
    Constants
==============================================================================*/
#define SHTERM_SUCCESS 0
#define SHTERM_FAILURE 1

#define SHTERM_FLIP_STATE_OPEN 0
#define SHTERM_FLIP_STATE_CLOSE 1

#define SHTERM_VARIOUS_MAX 4

/*==============================================================================
    Enumerates
==============================================================================*/
enum {
    SHTERM_INFO_SPEAKER = 0,
    SHTERM_INFO_VIB,
    SHTERM_INFO_CAMERA,
    SHTERM_INFO_LINE,
    SHTERM_INFO_QTV,
    SHTERM_INFO_DTB,
    SHTERM_INFO_LCDPOW,
    SHTERM_INFO_BACKLIGHT,
    SHTERM_INFO_BLUETOOTH,
    SHTERM_INFO_MOBILE_LIGHT,
    SHTERM_INFO_MUSIC,
    SHTERM_INFO_LINE_RINGING,
    SHTERM_INFO_TMM,
    SHTERM_INFO_WLAN_TXRX,
    SHTERM_INFO_SPEAKER_LEV,
    SHTERM_INFO_BACKLIGHT_LEV,
    SHTERM_INFO_IR,
    SHTERM_INFO_SD,
    SHTERM_INFO_GBNAND,
    SHTERM_INFO_USB,
    SHTERM_INFO_WTAP,
    SHTERM_INFO_GPS,
    SHTERM_INFO_ACCELE,
    SHTERM_INFO_COMPS,
    SHTERM_INFO_PROXIMITY,
    SHTERM_INFO_PROXIMITY_CDC,
    SHTERM_INFO_SUBCAMERA,
    SHTERM_INFO_LMK_S1,
    SHTERM_INFO_LMK_TH1,
    SHTERM_INFO_LMK_TH2,
    SHTERM_INFO_LMK_TH3,
    SHTERM_INFO_GYRO,
    SHTERM_INFO_PEDOMETER,
    SHTERM_INFO_MUSIC_TNL,
    SHTERM_INFO_ALARM,
    SHTERM_INFO_GRIP,
    SHTERM_INFO_WLAN_ASSOC,
    SHTERM_INFO_FINGER_AUTH,
    SHTERM_MAX
};

enum {
    SHTERM_TPS_STATE_NONE = 0,
    SHTERM_TPS_STATE_CRC_ERROR,
    SHTERM_TPS_STATE_CRC_ERROR_MAX,
    SHTERM_TPS_STATE_CRC_ERROR_FIX
};

/* events */
typedef enum {
    SHBATTLOG_EVENT_NONE,
    SHBATTLOG_EVENT_POWER_ON,
    SHBATTLOG_EVENT_ON_INFO,
    SHBATTLOG_EVENT_POWER_OFF,
    SHBATTLOG_EVENT_BATT_REPORT_NORM,
    SHBATTLOG_EVENT_BATT_REPORT_CHG,
    SHBATTLOG_EVENT_FGIC_EX0,
    SHBATTLOG_EVENT_CHG_INSERT_USB,
    SHBATTLOG_EVENT_CHG_REMOVE_USB,
    SHBATTLOG_EVENT_CHG_PUT_CRADLE,
    SHBATTLOG_EVENT_CHG_REMOVE_CRADLE,
    SHBATTLOG_EVENT_CHG_PUT_WIRELESS,
    SHBATTLOG_EVENT_CHG_REMOVE_WIRELESS,
    SHBATTLOG_EVENT_CHG_END,
    SHBATTLOG_EVENT_CHG_START,
    SHBATTLOG_EVENT_CHG_COMP,
    SHBATTLOG_EVENT_CHG_ERROR,
    SHBATTLOG_EVENT_CHG_FAST_ST,
    SHBATTLOG_EVENT_CHG_HOT_FAST_ST,
    SHBATTLOG_EVENT_CHG_ERR_BD_BAT_UNUSUAL_ST,
    SHBATTLOG_EVENT_CHG_ERR_BD_CHG_UNUSUAL_ST,
    SHBATTLOG_EVENT_CHG_ERR_CHG_POWER_SHORTAGE_ST,
    SHBATTLOG_EVENT_CHG_HOT_STOP_ST,
    SHBATTLOG_EVENT_CHG_COLD_STOP_ST,
    SHBATTLOG_EVENT_CHG_COUNT_OVER_STOP_ST,
    SHBATTLOG_EVENT_FGIC_EX10,
    SHBATTLOG_EVENT_FGIC_EX20,
    SHBATTLOG_EVENT_FGIC_EX30,
    SHBATTLOG_EVENT_FGIC_EX40,
    SHBATTLOG_EVENT_FGIC_EX50,
    SHBATTLOG_EVENT_FGIC_EX60,
    SHBATTLOG_EVENT_FGIC_EX70,
    SHBATTLOG_EVENT_FGIC_EX80,
    SHBATTLOG_EVENT_FGIC_EX90,
    SHBATTLOG_EVENT_FGIC_EX100,
    SHBATTLOG_EVENT_VOICE_START,
    SHBATTLOG_EVENT_VOICE_END,
    SHBATTLOG_EVENT_DATA_START,
    SHBATTLOG_EVENT_DATA_END,

    SHBATTLOG_EVENT_DVM_REBOOT,
    SHBATTLOG_EVENT_REBOOT,
    SHBATTLOG_EVENT_REBOOT_REASON,
    SHBATTLOG_EVENT_ALLRESET,
    SHBATTLOG_EVENT_CPU_HIGHTEMP_SHUTDOWN,
    SHBATTLOG_EVENT_CLEANUP_REBOOT,

    SHBATTLOG_EVENT_SIM_STATE_ABSENT,
    SHBATTLOG_EVENT_SIM_STATE_NOT_READY,
    SHBATTLOG_EVENT_SIM_STATE_READY,
    SHBATTLOG_EVENT_SIM_STATE_PIN,
    SHBATTLOG_EVENT_SIM_STATE_PUK,
    SHBATTLOG_EVENT_SIM_STATE_NETWORK_PERSONALIZATION,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR,
    SHBATTLOG_EVENT_SIM_STATE_ILLEGAL,
    SHBATTLOG_EVENT_SIM_STATE_CARD_REMOVED,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ADDED,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_UNKNOWN,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_POWER_DOWN,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_POLL_ERROR,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_VOLT_MISMATCH,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_PARITY_ERROR,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_UNKNOWN_REMOVED,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_CODE_SIM_TECHNICAL_PROBLEMS,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_NULL_BYTES,
    SHBATTLOG_EVENT_SIM_STATE_CARD_ERROR_SAP_CONNECTED,

    SHBATTLOG_EVENT_C_AC,
    SHBATTLOG_EVENT_C_HO,
    SHBATTLOG_EVENT_C_DI,
    SHBATTLOG_EVENT_C_AL,
    SHBATTLOG_EVENT_C_IN,
    SHBATTLOG_EVENT_C_WA,
    SHBATTLOG_EVENT_C_AN,
    SHBATTLOG_EVENT_C_EN,

    SHBATTLOG_EVENT_SMT,
    SHBATTLOG_EVENT_SUMT,
    SHBATTLOG_EVENT_SCER,

    SHBATTLOG_EVENT_SDCHKDSK_FATAL_ERR,
    SHBATTLOG_EVENT_SDCHKDSK_NO_MEMORY_ERR,
    SHBATTLOG_EVENT_FMT_GET_DAREA_ERR,
    SHBATTLOG_EVENT_FMT_GET_PAREA_ERR,
    SHBATTLOG_EVENT_FMT_MINSIZE_ERR,
    SHBATTLOG_EVENT_FMT_MAXSIZE_ERR,
    SHBATTLOG_EVENT_FMT_SYS_ERR,

    SHBATTLOG_EVENT_SD_DETECTED,
    SHBATTLOG_EVENT_SD_DETECT_FAILED,
    SHBATTLOG_EVENT_SD_PHY_REMOVED,
    SHBATTLOG_EVENT_SD_SOFT_REMOVED,

    SHBATTLOG_EVENT_SD_ERROR_UNKNOWN_UNKNOWN,
    SHBATTLOG_EVENT_SD_ERROR_UNKNOWN_CMD_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_UNKNOWN_DATA_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_UNKNOWN_REQ_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_UNKNOWN_CMD_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_UNKNOWN_DATA_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_UNKNOWN_OTHER_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_READ_UNKNOWN,
    SHBATTLOG_EVENT_SD_ERROR_READ_CMD_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_READ_DATA_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_READ_REQ_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_READ_CMD_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_READ_DATA_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_READ_OTHER_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_WRITE_UNKNOWN,
    SHBATTLOG_EVENT_SD_ERROR_WRITE_CMD_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_WRITE_DATA_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_WRITE_REQ_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_WRITE_CMD_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_WRITE_DATA_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_WRITE_OTHER_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_MISC_UNKNOWN,
    SHBATTLOG_EVENT_SD_ERROR_MISC_CMD_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_MISC_DATA_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_MISC_REQ_TIMEOUT,
    SHBATTLOG_EVENT_SD_ERROR_MISC_CMD_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_MISC_DATA_CRC_ERROR,
    SHBATTLOG_EVENT_SD_ERROR_MISC_OTHER_ERROR,

    SHBATTLOG_EVENT_SELFCHECK_NG,

    SHBATTLOG_EVENT_SD_INFO,

    SHBATTLOG_EVENT_HOT_STANDBY_ON,
    SHBATTLOG_EVENT_HOT_STANDBY_OFF,

    SHBATTLOG_EVENT_SMT_ENC,
    SHBATTLOG_EVENT_SFMT,
    SHBATTLOG_EVENT_SFMT_ENC,
    SHBATTLOG_EVENT_DATA_ENC,

    SHBATTLOG_EVENT_SHTHERMAL_POWER_OFF_DIALOG,
    SHBATTLOG_EVENT_SHTHERMAL_POWER_OFF,
    SHBATTLOG_EVENT_SHTHERMAL_LCD_RESTRICT,
    SHBATTLOG_EVENT_SHTHERMAL_LCD_RELEASE,
    SHBATTLOG_EVENT_SHTHERMAL_LCD_HIGH_TEMP_POWER_OFF,
    SHBATTLOG_EVENT_SHTHERMAL_LCD_LOW_TEMP_POWER_OFF,

    SHBATTLOG_EVENT_ALLRESET_MDM,
    SHBATTLOG_EVENT_ALLRESET_EXC,

    SHBATTLOG_EVENT_ERROR_CONSUMPTION_HOT_STANDBY_OFF,

    SHBATTLOG_EVENT_INSERT_AUDIO_PLUG,
    SHBATTLOG_EVENT_REMOVE_AUDIO_PLUG,
    SHBATTLOG_EVENT_INSERT_PIERCE_PLUG,
    SHBATTLOG_EVENT_REMOVE_PIERCE_PLUG,
    SHBATTLOG_EVENT_INSERT_HEADSET_PLUG,
    SHBATTLOG_EVENT_REMOVE_HEADSET_PLUG,

    SHBATTLOG_EVENT_HOST_MODE_START,
    SHBATTLOG_EVENT_HOST_MODE_END,

    SHBATTLOG_EVENT_TPS_CRC_ERROR,
    SHBATTLOG_EVENT_TPS_CRC_ERROR_MAX,
    SHBATTLOG_EVENT_TPS_CRC_ERROR_FIX,

    SHBATTLOG_EVENT_AUDIO_PATH_CHANGE,

    SHBATTLOG_EVENT_CHG_COLD_FAST_ST,
    SHBATTLOG_EVENT_CHG_TYPE_SDP,
    SHBATTLOG_EVENT_CHG_TYPE_CDP,
    SHBATTLOG_EVENT_CHG_TYPE_DCP,
    SHBATTLOG_EVENT_CHG_TYPE_HVDCP,
    SHBATTLOG_EVENT_CHG_TYPE_OTHER,

    SHBATTLOG_EVENT_DISP_ESD_DRVOFF,
    SHBATTLOG_EVENT_DISP_ESD_SLPIN,
    SHBATTLOG_EVENT_DISP_ESD_DISPOFF,
    SHBATTLOG_EVENT_DISP_ESD_CHK_NG,
    SHBATTLOG_EVENT_DISP_ESD_MIPI_ERROR,
    SHBATTLOG_EVENT_DISP_ESD_READ_ERROR,

    SHBATTLOG_EVENT_CHG_INSERT_USB_NOMOTION,
    SHBATTLOG_EVENT_CHG_REMOVE_USB_NOMOTION,
    SHBATTLOG_EVENT_CHG_PUT_CRADLE_NOMOTION,
    SHBATTLOG_EVENT_CHG_REMOVE_CRADLE_NOMOTION,

    SHBATTLOG_EVENT_TYPEC_MODE_NONE,
    SHBATTLOG_EVENT_TYPEC_MODE_SOURCE_DEFAULT,
    SHBATTLOG_EVENT_TYPEC_MODE_SOURCE_MEDIUM,
    SHBATTLOG_EVENT_TYPEC_MODE_SOURCE_HIGH,
    SHBATTLOG_EVENT_TYPEC_MODE_NON_COMPLIANT,
    SHBATTLOG_EVENT_TYPEC_MODE_SINK,
    SHBATTLOG_EVENT_TYPEC_MODE_SINK_POWERED_CABLE,
    SHBATTLOG_EVENT_TYPEC_MODE_SINK_DEBUG_ACCESSORY,
    SHBATTLOG_EVENT_TYPEC_MODE_SINK_AUDIO_ADAPTER,
    SHBATTLOG_EVENT_TYPEC_MODE_POWERED_CABLE_ONLY,

    SHBATTLOG_EVENT_CHG_TYPE_PD,

    SHBATTLOG_EVENT_CHG_INPUT_SUSPEND_ON,
    SHBATTLOG_EVENT_CHG_INPUT_SUSPEND_OFF,

    SHBATTLOG_EVENT_INTERNALSTORAGE_MOUNT,
    SHBATTLOG_EVENT_INTERNALSTORAGE_UNMOUNT,

    SHBATTLOG_EVENT_DETECT_CC_SHORT,
    SHBATTLOG_EVENT_RELEASE_CC_SHORT,
    SHBATTLOG_EVENT_DETECT_USB_HIGH_TEMP,
    SHBATTLOG_EVENT_RELEASE_USB_HIGH_TEMP,

    SHBATTLOG_EVENT_TYPEC_MODE_SOURCE_DEBUG_ACCESSORY,

    SHBATTLOG_EVENT_SUBSYSTEM_CRASH,
    SHBATTLOG_EVENT_MODEM_CRASH,
    SHBATTLOG_EVENT_ADSP_CRASH,
    SHBATTLOG_EVENT_CDSP_CRASH,
    SHBATTLOG_EVENT_SLPI_CRASH,
    SHBATTLOG_EVENT_WLAN_CRASH,

    SHBATTLOG_EVENT_QUEUE_FULL,

    SHBATTLOG_EVENT_MAX = 0x7fffffff
} shbattlog_event_num;

/*==============================================================================
    Variables
==============================================================================*/
typedef struct _shbattlog_info_t {
    int event_num;
    int bat_vol;
    int bat_temp;
    int cpu_temp;
    int chg_temp;
    int cam_temp;
    int pmic_temp;
    int pa_temp;
    int lcd_temp;
    int avg_cur;
    int chg_vol;
    int chg_cur;
    int latest_cur;
    int vol_per;
    int cur_dep_per;
    int avg_dep_per;
    char various[SHTERM_VARIOUS_MAX];
} shbattlog_info_t;

typedef struct {
    int id;
    unsigned char type;
    unsigned char vbat;
    unsigned char vchg;
    unsigned char ichg;
    unsigned char temp;
    unsigned char off_chg;
    unsigned char dev;
    unsigned char open;
    unsigned char ant;
    unsigned char iave;
    unsigned char curr;
    unsigned char vper;
    unsigned char dper;
    unsigned char save;
    const char name[48];
} shbattlog_disp_type;

#endif /* _SHTERM_H_ */
